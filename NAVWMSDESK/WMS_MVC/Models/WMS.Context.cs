//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NAVWMSDESK.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NAVWMSEntities : DbContext
    {
        public NAVWMSEntities()
            : base("name=NAVWMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<WMS_CC_REQUEST> WMS_CC_REQUEST { get; set; }
        public virtual DbSet<WMS_CC_SCAN> WMS_CC_SCAN { get; set; }
        public virtual DbSet<WMS_CLASS_EDITOR> WMS_CLASS_EDITOR { get; set; }
        public virtual DbSet<WMS_CYCLECOUNT> WMS_CYCLECOUNT { get; set; }
        public virtual DbSet<WMS_DOC_REGISTER> WMS_DOC_REGISTER { get; set; }
        public virtual DbSet<WMS_MOVE_DETAIL> WMS_MOVE_DETAIL { get; set; }
        public virtual DbSet<WMS_MOVE_HEAD> WMS_MOVE_HEAD { get; set; }
        public virtual DbSet<WMS_PICKING> WMS_PICKING { get; set; }
        public virtual DbSet<WMS_PUTAWAY> WMS_PUTAWAY { get; set; }
        public virtual DbSet<WMS_ROLL_EDITOR> WMS_ROLL_EDITOR { get; set; }
        public virtual DbSet<WMS_STOCKMOVEMENT> WMS_STOCKMOVEMENT { get; set; }
        public virtual DbSet<WMS_STORE_EDITOR> WMS_STORE_EDITOR { get; set; }
        public virtual DbSet<WMS_SUBCLASS_EDITOR> WMS_SUBCLASS_EDITOR { get; set; }
        public virtual DbSet<WMS_SUBROLL_EDITOR> WMS_SUBROLL_EDITOR { get; set; }
        public virtual DbSet<WMS_USER_EDITOR> WMS_USER_EDITOR { get; set; }
        public virtual DbSet<WMS_USER_TASKS> WMS_USER_TASKS { get; set; }
        public virtual DbSet<WMS_ZONE_EDITOR> WMS_ZONE_EDITOR { get; set; }
        public virtual DbSet<WMS_USER_TOKEN> WMS_USER_TOKEN { get; set; }
        public virtual DbSet<VW_CC1_TEMP> VW_CC1_TEMP { get; set; }
        public virtual DbSet<VW_CLASS_SUBCLASS> VW_CLASS_SUBCLASS { get; set; }
        public virtual DbSet<VW_USER> VW_USER { get; set; }
    
        [DbFunction("NAVWMSEntities", "FN_ListToTable")]
        public virtual IQueryable<FN_ListToTable_Result> FN_ListToTable(string splitOn, string list)
        {
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_ListToTable_Result>("[NAVWMSEntities].[FN_ListToTable](@SplitOn, @List)", splitOnParameter, listParameter);
        }
    
        public virtual ObjectResult<CC_DOCLIST_CONFIRM_Result> CC_DOCLIST_CONFIRM(Nullable<int> sTATUS, string cCNO, string bARCODE, string iTEMNO, string bINNO, string zONEID, string tOKENID, Nullable<int> uSERID)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var cCNOParameter = cCNO != null ?
                new ObjectParameter("CCNO", cCNO) :
                new ObjectParameter("CCNO", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var iTEMNOParameter = iTEMNO != null ?
                new ObjectParameter("ITEMNO", iTEMNO) :
                new ObjectParameter("ITEMNO", typeof(string));
    
            var bINNOParameter = bINNO != null ?
                new ObjectParameter("BINNO", bINNO) :
                new ObjectParameter("BINNO", typeof(string));
    
            var zONEIDParameter = zONEID != null ?
                new ObjectParameter("ZONEID", zONEID) :
                new ObjectParameter("ZONEID", typeof(string));
    
            var tOKENIDParameter = tOKENID != null ?
                new ObjectParameter("TOKENID", tOKENID) :
                new ObjectParameter("TOKENID", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CC_DOCLIST_CONFIRM_Result>("CC_DOCLIST_CONFIRM", sTATUSParameter, cCNOParameter, bARCODEParameter, iTEMNOParameter, bINNOParameter, zONEIDParameter, tOKENIDParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<CC_DOCLIST_CONFIRM_1_Result> CC_DOCLIST_CONFIRM_1(Nullable<int> sTATUS, string cCNO, string bARCODE, string iTEMNO, string bINNO, string zONEID, string tOKENID, Nullable<int> uSERID)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var cCNOParameter = cCNO != null ?
                new ObjectParameter("CCNO", cCNO) :
                new ObjectParameter("CCNO", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var iTEMNOParameter = iTEMNO != null ?
                new ObjectParameter("ITEMNO", iTEMNO) :
                new ObjectParameter("ITEMNO", typeof(string));
    
            var bINNOParameter = bINNO != null ?
                new ObjectParameter("BINNO", bINNO) :
                new ObjectParameter("BINNO", typeof(string));
    
            var zONEIDParameter = zONEID != null ?
                new ObjectParameter("ZONEID", zONEID) :
                new ObjectParameter("ZONEID", typeof(string));
    
            var tOKENIDParameter = tOKENID != null ?
                new ObjectParameter("TOKENID", tOKENID) :
                new ObjectParameter("TOKENID", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CC_DOCLIST_CONFIRM_1_Result>("CC_DOCLIST_CONFIRM_1", sTATUSParameter, cCNOParameter, bARCODEParameter, iTEMNOParameter, bINNOParameter, zONEIDParameter, tOKENIDParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<string> MOV_DOCLIST_CONFIRM(Nullable<int> sTATUS, string dOCNO, string bARCODE, string iTEMNO, string sERIALNO, string bINNO, Nullable<int> uSERID, string wHNO, string tOKENID)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var dOCNOParameter = dOCNO != null ?
                new ObjectParameter("DOCNO", dOCNO) :
                new ObjectParameter("DOCNO", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var iTEMNOParameter = iTEMNO != null ?
                new ObjectParameter("ITEMNO", iTEMNO) :
                new ObjectParameter("ITEMNO", typeof(string));
    
            var sERIALNOParameter = sERIALNO != null ?
                new ObjectParameter("SERIALNO", sERIALNO) :
                new ObjectParameter("SERIALNO", typeof(string));
    
            var bINNOParameter = bINNO != null ?
                new ObjectParameter("BINNO", bINNO) :
                new ObjectParameter("BINNO", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var wHNOParameter = wHNO != null ?
                new ObjectParameter("WHNO", wHNO) :
                new ObjectParameter("WHNO", typeof(string));
    
            var tOKENIDParameter = tOKENID != null ?
                new ObjectParameter("TOKENID", tOKENID) :
                new ObjectParameter("TOKENID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MOV_DOCLIST_CONFIRM", sTATUSParameter, dOCNOParameter, bARCODEParameter, iTEMNOParameter, sERIALNOParameter, bINNOParameter, uSERIDParameter, wHNOParameter, tOKENIDParameter);
        }
    
        public virtual ObjectResult<NAV_INTEGRATION_Result> NAV_INTEGRATION(Nullable<int> sTATUS, string wHNO, string dOCNO, string sUBDOCNO)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var wHNOParameter = wHNO != null ?
                new ObjectParameter("WHNO", wHNO) :
                new ObjectParameter("WHNO", typeof(string));
    
            var dOCNOParameter = dOCNO != null ?
                new ObjectParameter("DOCNO", dOCNO) :
                new ObjectParameter("DOCNO", typeof(string));
    
            var sUBDOCNOParameter = sUBDOCNO != null ?
                new ObjectParameter("SUBDOCNO", sUBDOCNO) :
                new ObjectParameter("SUBDOCNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NAV_INTEGRATION_Result>("NAV_INTEGRATION", sTATUSParameter, wHNOParameter, dOCNOParameter, sUBDOCNOParameter);
        }
    
        public virtual ObjectResult<PIK_DOCLIST_CONFIRM_Result> PIK_DOCLIST_CONFIRM(Nullable<int> sTATUS, string pICKNO, string sBCODE, string bARCODE, string iTEMNO, string bINNO, Nullable<int> tAG, string tOKENID, Nullable<int> uSERID)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var pICKNOParameter = pICKNO != null ?
                new ObjectParameter("PICKNO", pICKNO) :
                new ObjectParameter("PICKNO", typeof(string));
    
            var sBCODEParameter = sBCODE != null ?
                new ObjectParameter("SBCODE", sBCODE) :
                new ObjectParameter("SBCODE", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var iTEMNOParameter = iTEMNO != null ?
                new ObjectParameter("ITEMNO", iTEMNO) :
                new ObjectParameter("ITEMNO", typeof(string));
    
            var bINNOParameter = bINNO != null ?
                new ObjectParameter("BINNO", bINNO) :
                new ObjectParameter("BINNO", typeof(string));
    
            var tAGParameter = tAG.HasValue ?
                new ObjectParameter("TAG", tAG) :
                new ObjectParameter("TAG", typeof(int));
    
            var tOKENIDParameter = tOKENID != null ?
                new ObjectParameter("TOKENID", tOKENID) :
                new ObjectParameter("TOKENID", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PIK_DOCLIST_CONFIRM_Result>("PIK_DOCLIST_CONFIRM", sTATUSParameter, pICKNOParameter, sBCODEParameter, bARCODEParameter, iTEMNOParameter, bINNOParameter, tAGParameter, tOKENIDParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<PTA_DOCLIST_CONFIRM_Result> PTA_DOCLIST_CONFIRM(Nullable<int> sTATUS, string pUTNO, string bARCODE, string iTEMNO, string bINNO, string tOKENID, Nullable<int> uSERID)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var pUTNOParameter = pUTNO != null ?
                new ObjectParameter("PUTNO", pUTNO) :
                new ObjectParameter("PUTNO", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var iTEMNOParameter = iTEMNO != null ?
                new ObjectParameter("ITEMNO", iTEMNO) :
                new ObjectParameter("ITEMNO", typeof(string));
    
            var bINNOParameter = bINNO != null ?
                new ObjectParameter("BINNO", bINNO) :
                new ObjectParameter("BINNO", typeof(string));
    
            var tOKENIDParameter = tOKENID != null ?
                new ObjectParameter("TOKENID", tOKENID) :
                new ObjectParameter("TOKENID", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PTA_DOCLIST_CONFIRM_Result>("PTA_DOCLIST_CONFIRM", sTATUSParameter, pUTNOParameter, bARCODEParameter, iTEMNOParameter, bINNOParameter, tOKENIDParameter, uSERIDParameter);
        }
    
        public virtual ObjectResult<TEST_DOCLIST_Result> TEST_DOCLIST(Nullable<int> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TEST_DOCLIST_Result>("TEST_DOCLIST", uSERIDParameter);
        }
    
        public virtual ObjectResult<USER_EDITOR_ADDEDIT_Result> USER_EDITOR_ADDEDIT(Nullable<int> sTATUS, string uSERID, string uSERNAME, string uSERPASSWORD, Nullable<int> uSERROLL, Nullable<int> uSERSTATUS, Nullable<int> sTOREID, string gENERIC)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var uSERPASSWORDParameter = uSERPASSWORD != null ?
                new ObjectParameter("USERPASSWORD", uSERPASSWORD) :
                new ObjectParameter("USERPASSWORD", typeof(string));
    
            var uSERROLLParameter = uSERROLL.HasValue ?
                new ObjectParameter("USERROLL", uSERROLL) :
                new ObjectParameter("USERROLL", typeof(int));
    
            var uSERSTATUSParameter = uSERSTATUS.HasValue ?
                new ObjectParameter("USERSTATUS", uSERSTATUS) :
                new ObjectParameter("USERSTATUS", typeof(int));
    
            var sTOREIDParameter = sTOREID.HasValue ?
                new ObjectParameter("STOREID", sTOREID) :
                new ObjectParameter("STOREID", typeof(int));
    
            var gENERICParameter = gENERIC != null ?
                new ObjectParameter("GENERIC", gENERIC) :
                new ObjectParameter("GENERIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_EDITOR_ADDEDIT_Result>("USER_EDITOR_ADDEDIT", sTATUSParameter, uSERIDParameter, uSERNAMEParameter, uSERPASSWORDParameter, uSERROLLParameter, uSERSTATUSParameter, sTOREIDParameter, gENERICParameter);
        }
    
        public virtual ObjectResult<USER_LOGIN_Result> USER_LOGIN(Nullable<int> sTATUS, string uSERNAME, string pASSWORD)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_LOGIN_Result>("USER_LOGIN", sTATUSParameter, uSERNAMEParameter, pASSWORDParameter);
        }
    
        public virtual int USER_TOKEN_CHECK(string tOKENID, string tOKENEXTEND, ObjectParameter pARAOUT)
        {
            var tOKENIDParameter = tOKENID != null ?
                new ObjectParameter("TOKENID", tOKENID) :
                new ObjectParameter("TOKENID", typeof(string));
    
            var tOKENEXTENDParameter = tOKENEXTEND != null ?
                new ObjectParameter("TOKENEXTEND", tOKENEXTEND) :
                new ObjectParameter("TOKENEXTEND", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USER_TOKEN_CHECK", tOKENIDParameter, tOKENEXTENDParameter, pARAOUT);
        }
    
        public virtual ObjectResult<WMS_DESKTOP_Result> WMS_DESKTOP(Nullable<int> sTATUS, string dOCNO, string sUBDOCNO, Nullable<int> uSERID, string uSERNAME, string dOCTYPE, Nullable<System.DateTime> dATE1, Nullable<System.DateTime> dATE2, string wHNO)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var dOCNOParameter = dOCNO != null ?
                new ObjectParameter("DOCNO", dOCNO) :
                new ObjectParameter("DOCNO", typeof(string));
    
            var sUBDOCNOParameter = sUBDOCNO != null ?
                new ObjectParameter("SUBDOCNO", sUBDOCNO) :
                new ObjectParameter("SUBDOCNO", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var dOCTYPEParameter = dOCTYPE != null ?
                new ObjectParameter("DOCTYPE", dOCTYPE) :
                new ObjectParameter("DOCTYPE", typeof(string));
    
            var dATE1Parameter = dATE1.HasValue ?
                new ObjectParameter("DATE1", dATE1) :
                new ObjectParameter("DATE1", typeof(System.DateTime));
    
            var dATE2Parameter = dATE2.HasValue ?
                new ObjectParameter("DATE2", dATE2) :
                new ObjectParameter("DATE2", typeof(System.DateTime));
    
            var wHNOParameter = wHNO != null ?
                new ObjectParameter("WHNO", wHNO) :
                new ObjectParameter("WHNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WMS_DESKTOP_Result>("WMS_DESKTOP", sTATUSParameter, dOCNOParameter, sUBDOCNOParameter, uSERIDParameter, uSERNAMEParameter, dOCTYPEParameter, dATE1Parameter, dATE2Parameter, wHNOParameter);
        }
    
        public virtual int WMS_NAVDATA_PULL(Nullable<int> sTATUS, string wHNO, string dOCNO, string sUBDOCNO, string bARCODE, string iTEMNO, string sERAILNO, string iTEMDESC, string uOM, string qTY, string bINNO, string zONEID, string eANCODE)
        {
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            var wHNOParameter = wHNO != null ?
                new ObjectParameter("WHNO", wHNO) :
                new ObjectParameter("WHNO", typeof(string));
    
            var dOCNOParameter = dOCNO != null ?
                new ObjectParameter("DOCNO", dOCNO) :
                new ObjectParameter("DOCNO", typeof(string));
    
            var sUBDOCNOParameter = sUBDOCNO != null ?
                new ObjectParameter("SUBDOCNO", sUBDOCNO) :
                new ObjectParameter("SUBDOCNO", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var iTEMNOParameter = iTEMNO != null ?
                new ObjectParameter("ITEMNO", iTEMNO) :
                new ObjectParameter("ITEMNO", typeof(string));
    
            var sERAILNOParameter = sERAILNO != null ?
                new ObjectParameter("SERAILNO", sERAILNO) :
                new ObjectParameter("SERAILNO", typeof(string));
    
            var iTEMDESCParameter = iTEMDESC != null ?
                new ObjectParameter("ITEMDESC", iTEMDESC) :
                new ObjectParameter("ITEMDESC", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var qTYParameter = qTY != null ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(string));
    
            var bINNOParameter = bINNO != null ?
                new ObjectParameter("BINNO", bINNO) :
                new ObjectParameter("BINNO", typeof(string));
    
            var zONEIDParameter = zONEID != null ?
                new ObjectParameter("ZONEID", zONEID) :
                new ObjectParameter("ZONEID", typeof(string));
    
            var eANCODEParameter = eANCODE != null ?
                new ObjectParameter("EANCODE", eANCODE) :
                new ObjectParameter("EANCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_NAVDATA_PULL", sTATUSParameter, wHNOParameter, dOCNOParameter, sUBDOCNOParameter, bARCODEParameter, iTEMNOParameter, sERAILNOParameter, iTEMDESCParameter, uOMParameter, qTYParameter, bINNOParameter, zONEIDParameter, eANCODEParameter);
        }
    }
}
